"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/workplan/page",{

/***/ "(app-pages-browser)/./src/app/workplan/page.tsx":
/*!***********************************!*\
  !*** ./src/app/workplan/page.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WorkplanPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_big_calendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-big-calendar */ \"(app-pages-browser)/./node_modules/react-big-calendar/dist/react-big-calendar.esm.js\");\n/* harmony import */ var react_big_calendar_lib_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-big-calendar/lib/addons/dragAndDrop */ \"(app-pages-browser)/./node_modules/react-big-calendar/lib/addons/dragAndDrop/index.js\");\n/* harmony import */ var react_big_calendar_lib_addons_dragAndDrop_styles_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-big-calendar/lib/addons/dragAndDrop/styles.css */ \"(app-pages-browser)/./node_modules/react-big-calendar/lib/addons/dragAndDrop/styles.css\");\n/* harmony import */ var date_fns_format__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! date-fns/format */ \"(app-pages-browser)/./node_modules/date-fns/esm/format/index.js\");\n/* harmony import */ var date_fns_parse__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! date-fns/parse */ \"(app-pages-browser)/./node_modules/date-fns/esm/parse/index.js\");\n/* harmony import */ var date_fns_startOfWeek__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! date-fns/startOfWeek */ \"(app-pages-browser)/./node_modules/date-fns/esm/startOfWeek/index.js\");\n/* harmony import */ var date_fns_getDay__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! date-fns/getDay */ \"(app-pages-browser)/./node_modules/date-fns/esm/getDay/index.js\");\n/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! date-fns/locale */ \"(app-pages-browser)/./node_modules/date-fns/esm/locale/de/index.js\");\n/* harmony import */ var react_big_calendar_lib_css_react_big_calendar_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-big-calendar/lib/css/react-big-calendar.css */ \"(app-pages-browser)/./node_modules/react-big-calendar/lib/css/react-big-calendar.css\");\n/* harmony import */ var _lib_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/store */ \"(app-pages-browser)/./src/lib/store.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/db */ \"(app-pages-browser)/./src/lib/db.ts\");\n/* harmony import */ var _WorkplanForm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WorkplanForm */ \"(app-pages-browser)/./src/app/workplan/WorkplanForm.tsx\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/utils/storage */ \"(app-pages-browser)/./src/utils/storage.ts\");\n/* harmony import */ var _components_AlertBar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/AlertBar */ \"(app-pages-browser)/./src/components/AlertBar.tsx\");\n/* harmony import */ var _EventContent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EventContent */ \"(app-pages-browser)/./src/app/workplan/EventContent.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Import event content renderer\nconst localizer = (0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.dateFnsLocalizer)({\n    format: date_fns_format__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    parse: date_fns_parse__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    startOfWeek: (date)=>(0,date_fns_startOfWeek__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(date, {\n            weekStartsOn: 1\n        }),\n    getDay: date_fns_getDay__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    locales: {\n        de: date_fns_locale__WEBPACK_IMPORTED_MODULE_16__[\"default\"]\n    }\n});\nconst getShiftLabel = (shift, employee)=>{\n    const shiftType = getShiftType(shift.startTime);\n    const shiftLabel = shiftType === \"Fr\\xfchschicht\" ? \"Fr\\xfch\" : shiftType === \"Sp\\xe4tschicht\" ? \"Sp\\xe4t\" : shiftType === \"Nachtschicht\" ? \"Nacht\" : \"\";\n    return \"\".concat((employee === null || employee === void 0 ? void 0 : employee.name) || \"Unknown\", \"\\n\").concat(shiftLabel);\n};\nconst getShiftType = (startTime)=>{\n    const hour = parseInt(startTime.split(\":\")[0]);\n    if (hour >= 6 && hour < 14) return \"Fr\\xfchschicht\";\n    if (hour >= 14 && hour < 22) return \"Sp\\xe4tschicht\";\n    return \"Nachtschicht\";\n};\nconst getShiftBackgroundColor = (shift)=>{\n    const shiftType = getShiftType(shift.startTime);\n    switch(shiftType){\n        case \"Fr\\xfchschicht\":\n            return \"bg-blue-100 hover:bg-blue-200\";\n        case \"Sp\\xe4tschicht\":\n            return \"bg-green-100 hover:bg-green-200\";\n        case \"Nachtschicht\":\n            return \"bg-purple-100 hover:bg-purple-200\";\n        default:\n            return \"bg-gray-100 hover:bg-gray-200\";\n    }\n};\nconst DnDCalendar = (0,react_big_calendar_lib_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Calendar, {\n    dragAndDropOptions: {\n        dragRevertDuration: 0,\n        dragFromOutsideItem: false,\n        onDropFromOutside: false,\n        shouldCancelStart: ()=>false\n    }\n});\n_c = DnDCalendar;\nfunction WorkplanPage() {\n    _s();\n    const [events, setEvents] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedEvent, setSelectedEvent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isFormOpen, setIsFormOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [employees, setEmployees] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedDate, setSelectedDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { selectedStore, setSelectedStore } = (0,_lib_store__WEBPACK_IMPORTED_MODULE_6__.useStore)();\n    const [stores, setStores] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [date, setDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Date());\n    const [workingShifts, setWorkingShifts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [alert, setAlert] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        show: false,\n        message: \"\",\n        type: \"success\"\n    });\n    const messages = {\n        noStore: \"Bitte w\\xe4hlen Sie zuerst eine Filiale aus\",\n        noShifts: \"Keine Schichten gefunden\",\n        loadingShifts: \"Schichten werden geladen...\",\n        errorLoading: \"Fehler beim Laden der Daten\",\n        selectStore: \"Filiale ausw\\xe4hlen\"\n    };\n    const calendarMessages = {\n        previous: \"Letzter Monat\",\n        next: \"N\\xe4chster Monat\",\n        today: \"Dieser Monat\",\n        month: \"Monat\",\n        week: \"Woche\",\n        day: \"Tag\",\n        agenda: \"Agenda\",\n        date: \"Datum\",\n        time: \"Zeit\",\n        event: \"Termin\",\n        allDay: \"Ganzt\\xe4gig\",\n        noEventsInRange: \"Keine Termine in diesem Zeitraum\",\n        showMore: (total)=>\"+\".concat(total, \" weitere\")\n    };\n    const formats = {\n        weekdayFormat: (date)=>{\n            const weekdays = [\n                \"Montag\",\n                \"Dienstag\",\n                \"Mittwoch\",\n                \"Donnerstag\",\n                \"Freitag\",\n                \"Samstag\",\n                \"Sonntag\"\n            ];\n            return weekdays[date.getDay() === 0 ? 6 : date.getDay() - 1];\n        }\n    };\n    const handleSelectStore = (e)=>{\n        const storeId = e.target.value;\n        const store = stores.find((s)=>s.id === storeId);\n        setSelectedStore(store || null);\n    };\n    // Initial data load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        async function fetchData() {\n            try {\n                // Load employees and stores\n                const employeesData = await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.getAllEmployees();\n                const storesData = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getStores();\n                console.log(\"Initial load - Employees:\", employeesData);\n                console.log(\"Initial load - Stores:\", storesData);\n                setEmployees(employeesData);\n                setStores(storesData);\n                // Set initial store if none selected\n                if (!selectedStore && storesData.length > 0) {\n                    console.log(\"Setting initial store:\", storesData[0]);\n                    setSelectedStore(storesData[0]);\n                }\n                // Load working shifts from localStorage\n                const shifts = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getShifts();\n                setWorkingShifts(shifts);\n            } catch (error) {\n                console.error(\"Error fetching initial data:\", error);\n            }\n        }\n        fetchData();\n    }, []); // Only run on mount\n    // Load shifts and employees when store changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!selectedStore) {\n            console.log(\"No store selected, skipping data fetch\");\n            return;\n        }\n        console.log(\"Loading data for store:\", selectedStore);\n        async function fetchShifts() {\n            try {\n                const [shifts, employeesData] = await Promise.all([\n                    _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.getShiftsByStore(parseInt(selectedStore.id)),\n                    _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.getAllEmployees()\n                ]);\n                // Get working shifts\n                const availableShifts = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getShifts();\n                console.log(\"Data loaded:\", {\n                    shifts,\n                    employees: employeesData,\n                    workingShifts: availableShifts\n                });\n                setEmployees(employeesData);\n                const eventsWithEmployees = shifts.map((shift)=>{\n                    const employeeId = Number(shift.employeeId);\n                    const employee = employeesData.find((e)=>e.id === employeeId);\n                    const workingShift = availableShifts.find((ws)=>ws.id === shift.shiftId);\n                    console.log(\"Processing shift:\", shift, \"with employee:\", employee, \"working shift:\", workingShift);\n                    // Parse the date and times\n                    const [year, month, day] = shift.date.split(\"-\").map(Number);\n                    const shiftDate = new Date(year, month - 1, day);\n                    const [startHour, startMinute] = shift.startTime.split(\":\").map(Number);\n                    const [endHour, endMinute] = shift.endTime.split(\":\").map(Number);\n                    const start = new Date(shiftDate);\n                    start.setHours(startHour, startMinute, 0);\n                    const end = new Date(shiftDate);\n                    end.setHours(endHour, endMinute, 0);\n                    // For night shifts (end time before start time), we don't adjust the end date\n                    // This ensures the event stays within the selected date\n                    const isNightShift = end < start;\n                    const displayEnd = isNightShift ? new Date(start.getTime() + 1000) : end;\n                    const event = {\n                        id: shift.id,\n                        title: (workingShift === null || workingShift === void 0 ? void 0 : workingShift.title) || \"\".concat(shift.startTime, \" - \").concat(shift.endTime),\n                        start,\n                        end: displayEnd,\n                        storeId: parseInt(selectedStore.id),\n                        employeeId: shift.employeeId,\n                        resource: employee,\n                        extendedProps: {\n                            shift,\n                            employee,\n                            workingShift\n                        }\n                    };\n                    console.log(\"Created event:\", event);\n                    return event;\n                });\n                console.log(\"Setting events:\", eventsWithEmployees);\n                setEvents(eventsWithEmployees);\n            } catch (error) {\n                console.error(\"Error fetching shifts and employees:\", error);\n            }\n        }\n        fetchShifts();\n    }, [\n        selectedStore\n    ]); // Only run when store changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        refreshShifts();\n    }, [\n        selectedStore,\n        employees\n    ]);\n    const refreshShifts = async ()=>{\n        if (!(selectedStore === null || selectedStore === void 0 ? void 0 : selectedStore.id)) {\n            console.log(\"No store selected\");\n            return;\n        }\n        try {\n            console.log(\"Fetching shifts for store:\", selectedStore.id);\n            const shifts = await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.getShiftsByStore(parseInt(selectedStore.id));\n            console.log(\"Fetched shifts:\", shifts);\n            if (!shifts || shifts.length === 0) {\n                console.log(\"No shifts found for store\");\n                setEvents([]);\n                return;\n            }\n            // Load working shifts from storage\n            const availableShifts = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getShifts();\n            console.log(\"Available working shifts:\", availableShifts);\n            const eventsWithEmployees = shifts.map((shift)=>{\n                const employeeId = Number(shift.employeeId);\n                const employee = employees.find((e)=>e.id === employeeId);\n                const workingShift = availableShifts.find((ws)=>ws.id === shift.shiftId);\n                console.log(\"Processing shift:\", shift, \"with employee:\", employee, \"working shift:\", workingShift);\n                // Parse the date and times\n                const [year, month, day] = shift.date.split(\"-\").map(Number);\n                const shiftDate = new Date(year, month - 1, day);\n                const [startHour, startMinute] = shift.startTime.split(\":\").map(Number);\n                const [endHour, endMinute] = shift.endTime.split(\":\").map(Number);\n                const start = new Date(shiftDate);\n                start.setHours(startHour, startMinute, 0);\n                const end = new Date(shiftDate);\n                end.setHours(endHour, endMinute, 0);\n                // For night shifts (end time before start time), we don't adjust the end date\n                const isNightShift = end < start;\n                const displayEnd = isNightShift ? new Date(start.getTime() + 24 * 60 * 60 * 1000) : end;\n                const event = {\n                    id: shift.id,\n                    title: (workingShift === null || workingShift === void 0 ? void 0 : workingShift.title) || \"\".concat(shift.startTime, \" - \").concat(shift.endTime),\n                    start,\n                    end: displayEnd,\n                    storeId: parseInt(selectedStore.id),\n                    employeeId: shift.employeeId,\n                    resource: employee,\n                    extendedProps: {\n                        shift,\n                        employee,\n                        workingShift\n                    }\n                };\n                console.log(\"Created event:\", event);\n                return event;\n            });\n            console.log(\"Setting events:\", eventsWithEmployees);\n            setEvents(eventsWithEmployees);\n        } catch (error) {\n            console.error(\"Error refreshing shifts:\", error);\n        }\n    };\n    const handleEventClick = (info)=>{\n        if (!info || !info.event) {\n            console.error(\"No event information provided\");\n            return;\n        }\n        const event = info.event;\n        const extendedProps = event.extendedProps || {};\n        const { shift } = extendedProps;\n        console.log(\"Clicked event:\", event, \"with shift:\", shift);\n        if (!shift) {\n            console.error(\"No shift data found in event\");\n            return;\n        }\n        // Find the employee and working shift\n        const employee = employees.find((e)=>e.id === parseInt(shift.employeeId));\n        const workingShift = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getShifts().find((ws)=>ws.id === shift.shiftId);\n        // Format the title to include employee name and shift type\n        const title = \"\".concat((employee === null || employee === void 0 ? void 0 : employee.name) || \"Unknown Employee\", \" - \").concat((workingShift === null || workingShift === void 0 ? void 0 : workingShift.title) || \"Unknown Shift\");\n        setSelectedEvent({\n            id: parseInt(event.id),\n            title: title,\n            start: event.start,\n            end: event.end,\n            employeeId: parseInt(shift.employeeId),\n            storeId: parseInt(shift.storeId),\n            shiftId: shift.shiftId\n        });\n        setSelectedDate(event.start);\n        setIsFormOpen(true);\n    };\n    const handleSelectSlot = (param)=>{\n        let { start } = param;\n        console.log(\"Selected slot:\", start);\n        setSelectedDate(start);\n        setSelectedEvent(null);\n        setIsFormOpen(true);\n    };\n    const handleCloseForm = ()=>{\n        setIsFormOpen(false);\n        setSelectedEvent(null);\n        setSelectedDate(null);\n        refreshShifts();\n    };\n    const CustomToolbar = (param)=>{\n        let { onNavigate, date } = param;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"px-3 py-2 text-sm bg-white border rounded-md hover:bg-gray-50\",\n                            onClick: ()=>onNavigate(\"PREV\"),\n                            children: \"Letzter Monat\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                            lineNumber: 389,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"px-3 py-2 text-sm bg-white border rounded-md hover:bg-gray-50\",\n                            onClick: ()=>onNavigate(\"NEXT\"),\n                            children: \"N\\xe4chster Monat\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                            lineNumber: 395,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"px-3 py-2 text-sm bg-white border rounded-md hover:bg-gray-50\",\n                            onClick: ()=>onNavigate(\"TODAY\"),\n                            children: \"Dieser Monat\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                            lineNumber: 401,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                    lineNumber: 388,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-lg font-semibold\",\n                    children: date.toLocaleString(\"de-DE\", {\n                        month: \"long\",\n                        year: \"numeric\"\n                    })\n                }, void 0, false, {\n                    fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                    lineNumber: 408,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n            lineNumber: 387,\n            columnNumber: 7\n        }, this);\n    };\n    const handleDeleteShift = async (shiftId)=>{\n        try {\n            await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.deleteShift(shiftId);\n            await refreshShifts();\n        } catch (error) {\n            console.error(\"Error deleting shift:\", error);\n            showAlert(\"Fehler beim L\\xf6schen der Schicht\", \"error\");\n        }\n    };\n    const getEventContent = (eventInfo)=>{\n        const { event } = eventInfo;\n        const { employee, shift, workingShift } = event.extendedProps;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_EventContent__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n            employee: employee,\n            workingShift: workingShift,\n            shift: shift,\n            onDelete: handleDeleteShift,\n            onEdit: handleSelectEvent,\n            showAlert: showAlert,\n            refreshShifts: refreshShifts\n        }, void 0, false, {\n            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n            lineNumber: 430,\n            columnNumber: 7\n        }, this);\n    };\n    const handleEventPropGetter = (event)=>{\n        var _event_extendedProps;\n        const shift = (_event_extendedProps = event.extendedProps) === null || _event_extendedProps === void 0 ? void 0 : _event_extendedProps.shift;\n        const workingShift = _utils_storage__WEBPACK_IMPORTED_MODULE_9__.storage.getShifts().find((ws)=>ws.id === (shift === null || shift === void 0 ? void 0 : shift.shiftId));\n        // Different colors for different shifts\n        let backgroundColor = \"#3b82f6\"; // default blue\n        if (workingShift) {\n            const title = workingShift.title.toLowerCase();\n            if (title.includes(\"fr\\xfch\")) {\n                backgroundColor = \"#60a5fa\"; // lighter blue\n            } else if (title.includes(\"sp\\xe4t\")) {\n                backgroundColor = \"#34d399\"; // green\n            } else if (title.includes(\"nacht\")) {\n                backgroundColor = \"#818cf8\"; // purple\n            }\n        }\n        return {\n            className: \"calendar-event\",\n            style: {\n                backgroundColor,\n                border: \"none\"\n            }\n        };\n    };\n    const handleDayPropGetter = (date)=>{\n        // Weekend styling is now handled by dayCellClassNames in calendarOptions\n        return {};\n    };\n    const handleEventDrop = async (param)=>{\n        let { event, start, isAllDay } = param;\n        try {\n            const { shift, workingShift, employee } = event.extendedProps;\n            console.log(\"Drop event:\", {\n                event,\n                start,\n                shift,\n                workingShift\n            });\n            if (!shift || !workingShift) {\n                throw new Error(\"Invalid event data\");\n            }\n            // Create the new date by combining the dropped date with the working shift times\n            const newDate = new Date(start);\n            const [hours, minutes] = workingShift.fromTime.split(\":\");\n            newDate.setHours(parseInt(hours), parseInt(minutes), 0);\n            const shiftData = {\n                ...shift,\n                date: (0,date_fns_format__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(newDate, \"yyyy-MM-dd\"),\n                startTime: workingShift.fromTime,\n                endTime: workingShift.toTime\n            };\n            const formattedNewDate = (0,date_fns_format__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(newDate, \"d. MMMM\", {\n                locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_16__[\"default\"]\n            });\n            await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.updateShift(shift.id, shiftData);\n            showAlert(\"Schicht von \".concat((employee === null || employee === void 0 ? void 0 : employee.name) || \"Unbekannt\", \" wurde auf \").concat(formattedNewDate, \" verschoben\"), \"info\");\n            await refreshShifts();\n        } catch (error) {\n            console.error(\"Error updating shift:\", error);\n            showAlert(\"Fehler beim Verschieben der Schicht\", \"error\");\n        }\n    };\n    const handleEventResize = async (param)=>{\n        let { event, start, end } = param;\n        try {\n            const { shift, workingShift, employee } = event.extendedProps;\n            if (!shift || !workingShift) {\n                throw new Error(\"Invalid event data\");\n            }\n            showAlert(\"Schicht von \".concat((employee === null || employee === void 0 ? void 0 : employee.name) || \"Unbekannt\", \" wurde angepasst\"), \"info\");\n            await refreshShifts();\n        } catch (error) {\n            console.error(\"Error resizing shift:\", error);\n            showAlert(\"Fehler beim Anpassen der Schicht\", \"error\");\n        }\n    };\n    const handleSelectEvent = async (event)=>{\n        try {\n            const { shift, workingShift } = event.extendedProps;\n            if (!shift || !workingShift) {\n                throw new Error(\"Invalid event data\");\n            }\n            setSelectedEvent(event);\n            setSelectedDate(event.start);\n            setIsFormOpen(true);\n        } catch (error) {\n            console.error(\"Error selecting event:\", error);\n            showAlert(\"Fehler beim \\xd6ffnen der Schicht\", \"error\");\n        }\n    };\n    const handleShiftUpdate = async (oldShift, newShiftData, newWorkingShift)=>{\n        try {\n            await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.updateShift(oldShift.id, newShiftData);\n            const formattedDate = (0,date_fns_format__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(new Date(newShiftData.date), \"d. MMMM\", {\n                locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_16__[\"default\"]\n            });\n            // Find the old working shift to get its title\n            const oldWorkingShift = workingShifts.find((ws)=>ws.id === oldShift.shiftId);\n            const oldShiftTitle = (oldWorkingShift === null || oldWorkingShift === void 0 ? void 0 : oldWorkingShift.title) || \"Unbekannte Schicht\";\n            const newShiftTitle = newWorkingShift.title;\n            if (oldShift.shiftId !== newShiftData.shiftId) {\n                showAlert(\"\".concat(formattedDate, \": \").concat(oldShiftTitle, \" wurde in \").concat(newShiftTitle, \" umgewandelt\"), \"info\");\n            } else {\n                showAlert(\"\".concat(formattedDate, \": Schicht wurde aktualisiert\"), \"info\");\n            }\n            await refreshShifts();\n        } catch (error) {\n            console.error(\"Error updating shift:\", error);\n            showAlert(\"Fehler beim Aktualisieren der Schicht\", \"error\");\n        }\n    };\n    const handleCreateShift = async (shiftData)=>{\n        try {\n            if (!(selectedStore === null || selectedStore === void 0 ? void 0 : selectedStore.id)) {\n                showAlert(\"Keine Filiale ausgew\\xe4hlt\", \"error\");\n                return;\n            }\n            const newShiftData = {\n                storeId: parseInt(selectedStore.id),\n                employeeId: shiftData.employeeId,\n                date: shiftData.date,\n                startTime: shiftData.startTime,\n                endTime: shiftData.endTime,\n                shiftId: shiftData.shiftId\n            };\n            console.log(\"Creating new shift:\", newShiftData);\n            const newId = await _lib_db__WEBPACK_IMPORTED_MODULE_7__.dbService.addShift(newShiftData);\n            console.log(\"Created shift with ID:\", newId);\n            const formattedDate = (0,date_fns_format__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(new Date(shiftData.date), \"d. MMMM\", {\n                locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_16__[\"default\"]\n            });\n            const workingShift = workingShifts.find((ws)=>ws.id === shiftData.shiftId);\n            showAlert(\"\".concat(formattedDate, \": \").concat((workingShift === null || workingShift === void 0 ? void 0 : workingShift.title) || \"Schicht\", \" wurde erstellt\"), \"success\");\n            await refreshShifts();\n        } catch (error) {\n            console.error(\"Error creating shift:\", error);\n            showAlert(\"Fehler beim Erstellen der Schicht\", \"error\");\n        }\n    };\n    const showAlert = function(message) {\n        let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"success\";\n        setAlert({\n            show: true,\n            message,\n            type\n        });\n    };\n    const handleNavigate = (newDate)=>{\n        setDate(newDate);\n        refreshShifts();\n    };\n    // Transform events to ensure they only appear in their start day\n    // IMPORTANT: This transformation is crucial for late shifts that span multiple days\n    // DO NOT REMOVE or modify this transformation as it ensures proper event display\n    const transformEvents = (events)=>{\n        return events.map((event)=>({\n                ...event,\n                allDay: true,\n                end: new Date(event.start) // Set end to start to prevent multi-day spanning\n            }));\n    };\n    const calendarOptions = {\n        defaultView: \"month\",\n        views: [\n            \"month\"\n        ],\n        selectable: true,\n        resizable: true,\n        events: transformEvents(events),\n        onSelectSlot: handleSelectSlot,\n        onEventDrop: handleEventDrop,\n        onEventResize: handleEventResize,\n        onSelectEvent: handleEventClick,\n        draggable: true,\n        step: 30,\n        timeslots: 2,\n        date: date,\n        onNavigate: handleNavigate,\n        components: {\n            toolbar: CustomToolbar,\n            event: getEventContent\n        },\n        dayCellClassNames: (arg)=>{\n            const day = arg.date.getDay();\n            if (day === 0) return \"sunday-cell\";\n            if (day === 6) return \"saturday-cell\";\n            return \"\";\n        },\n        dayPropGetter: handleDayPropGetter,\n        eventPropGetter: handleEventPropGetter,\n        messages: calendarMessages,\n        formats: formats,\n        popup: false,\n        tooltipAccessor: null,\n        showMultiDayTimes: false,\n        multiDayEvents: {\n            startDate: \"start\",\n            endDate: \"end\"\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"h-full p-4 bg-gray-50 max-w-[95vw] mx-auto\",\n        children: [\n            alert.show && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AlertBar__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                message: alert.message,\n                type: alert.type,\n                onClose: ()=>setAlert({\n                        ...alert,\n                        show: false\n                    })\n            }, void 0, false, {\n                fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                lineNumber: 655,\n                columnNumber: 9\n            }, this),\n            !selectedStore ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center h-[calc(100vh-8rem)] bg-white rounded-lg shadow-sm\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-600 text-lg mb-4\",\n                            children: \"Bitte w\\xe4hlen Sie eine Filiale aus\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                            lineNumber: 665,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-500\",\n                            children: \"Verwenden Sie die Dropdown-Liste oben, um eine Filiale auszuw\\xe4hlen\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                            lineNumber: 666,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                    lineNumber: 664,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                lineNumber: 663,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DnDCalendar, {\n                        localizer: localizer,\n                        style: {\n                            height: \"calc(100vh - 8rem)\"\n                        },\n                        ...calendarOptions\n                    }, void 0, false, {\n                        fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                        lineNumber: 671,\n                        columnNumber: 11\n                    }, this),\n                    isFormOpen && selectedStore && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_WorkplanForm__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        isOpen: isFormOpen,\n                        event: selectedEvent,\n                        storeId: selectedStore.id,\n                        onClose: handleCloseForm,\n                        selectedDate: selectedDate,\n                        onCreate: handleCreateShift,\n                        onUpdate: handleShiftUpdate\n                    }, void 0, false, {\n                        fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n                        lineNumber: 678,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\___SYSTEM\\\\Desktop\\\\_NPM\\\\arbeitsplan\\\\src\\\\app\\\\workplan\\\\page.tsx\",\n        lineNumber: 653,\n        columnNumber: 5\n    }, this);\n}\n_s(WorkplanPage, \"eNjtdnJpvY/NPH0GQN9kFZaLnao=\", false, function() {\n    return [\n        _lib_store__WEBPACK_IMPORTED_MODULE_6__.useStore\n    ];\n});\n_c1 = WorkplanPage;\nvar _c, _c1;\n$RefreshReg$(_c, \"DnDCalendar\");\n$RefreshReg$(_c1, \"WorkplanPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/workplan/page.tsx\n"));

/***/ })

});