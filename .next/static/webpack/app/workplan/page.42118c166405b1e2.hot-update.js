"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/workplan/page",{

/***/ "(app-pages-browser)/./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   storage: function() { return /* binding */ storage; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ storage auto */ const STORAGE_KEYS = {\n    EMPLOYEES: \"workplan_employees\",\n    SHIFTS: \"workplan_shifts\",\n    WORKPLAN: \"workplan_entries\",\n    STORES: \"stores\"\n};\nconst storage = {\n    // Employees\n    getEmployees: ()=>{\n        if (false) {}\n        const data = localStorage.getItem(STORAGE_KEYS.EMPLOYEES);\n        return data ? JSON.parse(data) : [];\n    },\n    saveEmployee: (employee)=>{\n        const employees = storage.getEmployees();\n        const updatedEmployees = [\n            ...employees,\n            {\n                ...employee,\n                id: crypto.randomUUID()\n            }\n        ];\n        localStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(updatedEmployees));\n    },\n    updateEmployee: (employee)=>{\n        const employees = storage.getEmployees();\n        const updatedEmployees = employees.map((emp)=>emp.id === employee.id ? employee : emp);\n        localStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(updatedEmployees));\n    },\n    deleteEmployee: (id)=>{\n        const employees = storage.getEmployees();\n        const updatedEmployees = employees.filter((emp)=>emp.id !== id);\n        localStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(updatedEmployees));\n    },\n    // Working Shifts\n    getShifts: ()=>{\n        if (false) {}\n        const data = localStorage.getItem(STORAGE_KEYS.SHIFTS);\n        return data ? JSON.parse(data) : [];\n    },\n    saveShift: (shift)=>{\n        const shifts = storage.getShifts();\n        const updatedShifts = [\n            ...shifts,\n            {\n                ...shift,\n                id: crypto.randomUUID()\n            }\n        ];\n        localStorage.setItem(STORAGE_KEYS.SHIFTS, JSON.stringify(updatedShifts));\n    },\n    updateShift: (shift)=>{\n        const shifts = storage.getShifts();\n        const updatedShifts = shifts.map((s)=>s.id === shift.id ? shift : s);\n        localStorage.setItem(STORAGE_KEYS.SHIFTS, JSON.stringify(updatedShifts));\n    },\n    deleteShift: (id)=>{\n        const shifts = storage.getShifts();\n        const updatedShifts = shifts.filter((s)=>s.id !== id);\n        localStorage.setItem(STORAGE_KEYS.SHIFTS, JSON.stringify(updatedShifts));\n    },\n    // Workplan Entries\n    getWorkplanEntries: ()=>{\n        if (false) {}\n        const data = localStorage.getItem(STORAGE_KEYS.WORKPLAN);\n        return data ? JSON.parse(data) : [];\n    },\n    saveWorkplanEntry: (entry)=>{\n        const entries = storage.getWorkplanEntries();\n        const updatedEntries = [\n            ...entries,\n            {\n                ...entry,\n                id: crypto.randomUUID()\n            }\n        ];\n        localStorage.setItem(STORAGE_KEYS.WORKPLAN, JSON.stringify(updatedEntries));\n    },\n    updateWorkplanEntry: (entry)=>{\n        const entries = storage.getWorkplanEntries();\n        const updatedEntries = entries.map((e)=>e.id === entry.id ? entry : e);\n        localStorage.setItem(STORAGE_KEYS.WORKPLAN, JSON.stringify(updatedEntries));\n    },\n    deleteWorkplanEntry: (id)=>{\n        const entries = storage.getWorkplanEntries();\n        const updatedEntries = entries.filter((e)=>e.id !== id);\n        localStorage.setItem(STORAGE_KEYS.WORKPLAN, JSON.stringify(updatedEntries));\n    },\n    // Stores\n    getStores: ()=>{\n        const stores = localStorage.getItem(STORAGE_KEYS.STORES);\n        return stores ? JSON.parse(stores) : [];\n    },\n    saveStore: (store)=>{\n        const stores = storage.getStores();\n        stores.push(store);\n        localStorage.setItem(STORAGE_KEYS.STORES, JSON.stringify(stores));\n    },\n    updateStore: (store)=>{\n        const stores = storage.getStores();\n        const index = stores.findIndex((s)=>s.id === store.id);\n        if (index !== -1) {\n            stores[index] = store;\n            localStorage.setItem(STORAGE_KEYS.STORES, JSON.stringify(stores));\n        }\n    },\n    deleteStore: (id)=>{\n        const stores = storage.getStores();\n        const filteredStores = stores.filter((store)=>store.id !== id);\n        localStorage.setItem(STORAGE_KEYS.STORES, JSON.stringify(filteredStores));\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/storage.ts\n"));

/***/ })

});